Why can't we use the getURI() method to get the image URI? Is there a way to import it or something? This website has a complete example of how to display googleMapsUri photos: @https://developers.google.com/maps/documentation/javascript/place-photos#maps_place_photos-javascript



The photos object contains a googleMapsUri property. This property can't directly be used to display images. We need to use the Maps JavaScript API to display the image. This website has an example of how to do this: @https://developers.google.com/maps/documentation/javascript/place-photos#maps_place_photos-javascript. Can you write the code in the createPoiCard function to display the image using the Maps JavaScript API? Make sure to include the attribution.



The photos are visible now. There are a couple changes I wan't you to make. First, I would like it if you can put arrow buttons on the left and right of the image that will allow the user to see the next and previous images in the photos array. Second, The image aspect ratio should be preserved. Third, there should be a maximum height instead of a maximum width.



This looks pretty good, but there's one problem. The author attribution photoUri is a photo of the author, not the photo of the place. You need to use the getURI method to get the image source. Can you fix this? Please review the website I provided for examples. @https://developers.google.com/maps/documentation/javascript/place-photos#maps_place_photos-javascript



When I hover over the arrow buttons, the button has this press-down effect where it looks like it's being pressed. It moves way too much. Can you fix this?



Can you add the following disclaimers to the bottom of the preferences page?
* Travel time roughly estimates the radius to look up possible points of interest. Radius may be closer or farther than expected. Adjust the travel time as needed.
* Walking, bicycling, and two-wheel routes are in beta and might sometimes be missing clear sidewalks, pedestrian paths, or bicycling paths.
* Mode of transport will fallback to driving when the preferred mode is unavailable.
* Results may vary
* AI may make mistakes